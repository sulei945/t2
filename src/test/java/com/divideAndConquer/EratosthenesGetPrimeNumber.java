package com.divideAndConquer;

/**
 * Created by zhangwei on 2018/1/7.
 * Eratosthenes筛法求素数（质数）
 * 质数：除了1和本身不能被别的数整除， 1既不是素数也不是合数。
 * 给定一个正整数N，求比N小的所有质数
 *
 */
public class EratosthenesGetPrimeNumber {

    /**
     *  Eratosthenes筛法求素数（质数）
     *  1.将2到N写成一排
     *  2.记排头元素为x，则x是素数；除x以外，将x的倍数全部划区，剩下的排头也是素数。
     *      首先2是素数，将3～N中可以被2整除的数字都去掉，剩下的数字2，3，5...N
     *      排头元素，3即为素数。
     *  3.重复以上操作，直到没有元素被划区，则剩余的即小于等于N的全部素数
     *  4.为表达方便，将排头元素成为筛数。
     */

    /**
     * 算法改进：
     * 实际上不用筛选所有的，如果N=100，则最多筛选到N的开方，即筛选到10即可。
     *
     */
}
