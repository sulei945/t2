package com.queue;

/**
 * Created by zhangwei on 2018/1/2.
 * 最短路径，最短路径条数
 * 给定一个无向连通图，假定图中所有边的权值都是1，从源点A点到终点Z点的最短路径有多条，求不同的最短路径数目。
 */
public class ShortestPath {

    /**
     * 权值相同的最短路径问题，则源点Dijkstra算法退化成BFS广度优先搜索算法，
     * 数据结构：
     * 假定起点为0，终点为N：
     * 结点步数step[0,...,N-1] 初始化为0
     * 路径数目pathNum[0,...,N-1]初始化为0
     * pathNum[0]=1
     * 算法分析：
     * 若从当前结点i扩展到领结点j时：
     * 若step[j]为0，则
     * step[j]=step[i]+1,则
     * pathN[j]==stop[i]+1
     * 可考虑扩展到结点N，则提前终止算法。
     *
     * 广度优先搜索算法，有点像往水里扔石子儿后，波纹扩散的感觉
     * 找出所有一步到达的点，再找出所有2步到达的点，依次找到最后
     */

    /**
     * 迪及斯特拉 图最短路径算法（Dijkstra）
     *
     */

    /*
     * Floyd算法,经典的动态规划算法
     * 应该是非queue结构处理方式
     */

}
